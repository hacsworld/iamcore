name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-smoke:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install deps for smoke
        run: |
          sudo apt-get update
          sudo apt-get install -y jq curl

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build image (core)
        run: |
          docker build -t hacs-core:test ./core

      - name: Prepare CI .env (no secrets)
        run: |
          cat > core/.env.ci <<'EOF'
          API_KEY=ci-test-key
          ALLOWLIST=wikipedia.org,docs.python.org,ffmpeg.org,arxiv.org,github.com,x.ai
          USE_GENERATION=none
          GROK_API_KEY=
          GROK_MODEL=grok-4-fast
          OLLAMA_MODEL=llama3.1:8b
          AUTOSAVE_SEC=5
          MEMORY_PATH=./state/memory.json
          HUMOR_MODE=friendly
          REGION=ru-RU
          HUMOR_USER_NAME=бот
          EOF

      - name: Run container
        run: |
          mkdir -p data/state data/outputs data/vault
          docker run -d --name hacs-ci \
            --env-file core/.env.ci \
            -p 8000:8000 \
            -v $PWD/data/state:/app/state \
            -v $PWD/data/outputs:/app/outputs \
            -v $PWD/data/vault:/app/vault:ro \
            hacs-core:test
          for i in {1..30}; do
            if curl -fsS -H "X-API-Key: ci-test-key" http://127.0.0.1:8000/health >/dev/null; then
              echo "service is up"; break; fi; sleep 1
          done

      - name: Smoke (sanity light)
        env:
          API: http://127.0.0.1:8000
          API_KEY: ci-test-key
          SKIP_CLOUD: "1"
        run: |
          bash scripts/sanity.sh

      - name: Show logs on failure
        if: failure()
        run: |
          docker logs hacs-ci || true

      - name: Stop container
        if: always()
        run: |
          docker rm -f hacs-ci || true

  # OPTIONAL: push to GHCR — скипнется, если токена нет
  push-image:
    needs: build-and-smoke
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3

      - name: Check GHCR token
        id: guard
        shell: bash
        run: |
          if [ -z "${{ secrets.GHCR_TOKEN }}" ]; then
            echo "has=0" >> "$GITHUB_OUTPUT"
          else
            echo "has=1" >> "$GITHUB_OUTPUT"
          fi

      - name: Skip (no token)
        if: steps.guard.outputs.has == '0'
        run: echo "No GHCR token; skipping push."

      - name: Login to GHCR
        if: steps.guard.outputs.has == '1'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build & push
        if: steps.guard.outputs.has == '1'
        run: |
          IMAGE=ghcr.io/${{ github.repository }}/hacs-core:${{ github.sha }}
          docker build -t "$IMAGE" ./core
          docker push "$IMAGE"
